{"version":3,"file":"static/js/169.5d6f1ad4.chunk.js","mappings":"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","sources":["wsclient/crmservices/httpBackOfficeUtil.js"],"sourcesContent":["/**\r\n * class to handle HTTP Requests and Token refresh\r\n */\r\n\r\nimport querystring from 'querystring';\r\nimport { initOptionHeader } from '../../utils/common';\r\n\r\nvar jwtDecode = require('jwt-decode');\r\n\r\nexport const httpBackOfficeUtil = {\r\n  setupChannel,\r\n  put,\r\n  post,\r\n  get,\r\n  sendDelete,\r\n  is200OK,\r\n  startSession,\r\n  getSession,\r\n  cleanObj,\r\n  cleanSession,\r\n  switchSession\r\n};\r\n\r\n\r\n/** local variables */\r\n\r\nlet _storeKVFn;\r\nlet _getKVFn;\r\nlet _sessionInvalidCallback;\r\nlet _fetchFn;\r\n\r\nlet _apiKey;\r\nlet _accessToken;\r\nlet _refreshToken;\r\nlet _host;\r\nlet _sessionData;\r\n\r\nlet _selfServicePath = 'self-service';\r\nlet _backofficePath = 'backoffice/v1/';\r\n/**\r\n * \r\n * TODO: do we need a call back for no internet connection ?\r\n * when no connection refresh token will not be available -> should not kick user out.\r\n */\r\n\r\nasync function setupChannel({\r\n  storeKVFn,  //function to store key value\r\n  getKVFn,    //function to get value by key from the storage\r\n  sessionInvalidCallback, //function to call when api_key or token key is invalid and refresh token if available was failed\r\n  apiKey,\r\n  host,\r\n  fetchFn\r\n}) {\r\n  _storeKVFn = storeKVFn;\r\n  _getKVFn = getKVFn;\r\n  _sessionInvalidCallback = sessionInvalidCallback;\r\n  _apiKey = apiKey;\r\n  _host = host;\r\n  if (fetchFn)\r\n    _fetchFn = fetchFn;\r\n  else\r\n    _fetchFn = fetch;\r\n\r\n  if (_getKVFn) {\r\n    _accessToken = await _getKVFn('access_token');\r\n    _refreshToken = await _getKVFn('refresh_token');\r\n    try {\r\n      if (_accessToken) \r\n        {\r\n          _sessionData = jwtDecode(_accessToken);\r\n          await refreshToken();\r\n        }\r\n    }catch (e) {\r\n      console.log('Failed to load session data: ', e);  \r\n      _sessionData = undefined;\r\n    }\r\n  }\r\n  //TODO add silent refresh token here\r\n}\r\n\r\nasync function refreshToken() {\r\n  try {\r\n    // console.log('Session data:', _sessionData);\r\n    // console.log('_refreshToken:', _refreshToken);\r\n    let currentTime = Date.now();\r\n    let tokenLiveInSec = (_sessionData.exp - currentTime/1000);\r\n    // console.log(\"tokenLiveInSec:\" + tokenLiveInSec);\r\n    if (tokenLiveInSec > 60*60)\r\n      return;\r\n\r\n  //try to refresh token\r\n\r\n    //console.log('API: ', contact)\r\n    let response = await post({\r\n        resourcePath: \"users/refresh\",\r\n        refreshToken: true,\r\n        logOutIfSessionInvalid: false,\r\n    });\r\n    if (response.code == \"OK\") {\r\n        startSession(response.data);\r\n        return;\r\n    }\r\n    \r\n  } catch (e) {\r\n      console.log(\"Exception refresh: \", e);\r\n      return;\r\n  }\r\n}\r\n\r\nfunction startSession({access_token,refresh_token, exp, organisations}) {\r\n  //TODO handle expiration\r\n  _accessToken = access_token;\r\n  _refreshToken = refresh_token;\r\n  if (_storeKVFn) {\r\n    _storeKVFn(\"refresh_token\", refresh_token)\r\n    _storeKVFn(\"access_token\", access_token)\r\n    //_storeKVFn(\"organisations\", JSON.stringify(organisations));\r\n    // _storeKVFn(\"exp\", exp)\r\n    //parse and store session data\r\n    _sessionData = jwtDecode(_accessToken);\r\n      // console.log('Session data:', _sessionData);\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\nfunction switchSession({access_token,refresh_token, exp},isMerchant) {\r\n  _sessionData = jwtDecode(access_token);\r\n  if(isMerchant){\r\n    var _sessionServiceOwnerData = jwtDecode(_accessToken);\r\n    _storeKVFn(\"merchant_id\", _sessionData.current_organisation_id);\r\n    _storeKVFn(\"service_owner_id\", _sessionServiceOwnerData.current_organisation_id)\r\n  }else{\r\n    _storeKVFn(\"merchant_id\", null);\r\n  }\r\n\r\n  startSession({access_token,refresh_token, exp})\r\n}\r\n\r\nfunction cleanSession() {\r\n  //TODO handle expiration\r\n  _accessToken = undefined;\r\n  _refreshToken = undefined;\r\n  if (_storeKVFn) {\r\n    _storeKVFn(\"refresh_token\", undefined)\r\n    _storeKVFn(\"access_token\", undefined)\r\n    //parse and store session data\r\n      console.log('Session cleared');\r\n  }\r\n\r\n}\r\n\r\nfunction getSession() {\r\n  console.log(\"AAAAAAAAAAAAAAAAAAAA\");\r\n  console.log(\"AAAAAAAAAAAAAAAAAAAA\");\r\n  console.log(\"AAAAAAAAAAAAAAAAAAAA\");\r\n  console.log(\"AAAAAAAAAAAAAAAAAAAA _sessionData:\",_sessionData);\r\n  return _sessionData;\r\n}\r\n\r\nfunction getURI(isBackend, resourcePath) {\r\n  if (isBackend == true)\r\n    return _host + _backofficePath + resourcePath;\r\n  else\r\n    return _host + _selfServicePath + resourcePath;\r\n}\r\n\r\nfunction json2Obj(str) {\r\n  try {\r\n    return JSON.parse(str);\r\n  }catch (e){\r\n    return null;\r\n  }\r\n}\r\nasync function post({\r\n  resourcePath,\r\n  body,\r\n  queryParams,\r\n  withAccessToken = false,\r\n  withoutApikey = false,\r\n  logOutIfSessionInvalid=true,\r\n  refreshToken\r\n}) {\r\n  // let serverConfig = getServerConfig();\r\n  // let uri = getURI(isBackend, resourcePath);\r\n  let uri = _host + 'backoffice/v1/' + resourcePath;\r\n  var options = {};\r\n  options.headers = initOptionHeader();\r\n  options.method = \"POST\";\r\n  if (withAccessToken == true || logOutIfSessionInvalid==true || refreshToken==true) {\r\n    if (refreshToken)\r\n      options.headers['Authorization'] = 'Bearer ' + _refreshToken;\r\n    else\r\n      options.headers['Authorization'] = 'Bearer ' + _accessToken;\r\n  } else if(!withoutApikey)\r\n    options.headers['api_key'] = _apiKey;\r\n\r\n  // if (refreshToken) {\r\n  //   options.headers['refresh_token'] = refreshToken;\r\n  // }\r\n  if (body)\r\n    options.body = JSON.stringify(body);\r\n  if (queryParams)\r\n    uri = _host + '?' + querystring.encode(queryParams);\r\n  console.log('POST: ', uri, options);\r\n  let response = await _fetchFn(uri, options);\r\n  let bodyText = await response.text()\r\n  console.log('Response - ' ,response.status , ' - Body:', (bodyText ? json2Obj(bodyText) : bodyText));\r\n  if (response.status == '200') {\r\n    return { code: \"OK\", data: bodyText ? json2Obj(bodyText) : null };\r\n  } else\r\n  {\r\n    validateForceLogout(response,logOutIfSessionInvalid);\r\n    return { code: response.status, bodyText: bodyText, error: json2Obj(bodyText) };\r\n  }\r\n  \r\n    \r\n\r\n  //TODO: add token expire and validation later \r\n  // let accessToken;\r\n  // if (withAccessToken)\r\n  // {\r\n  //   //check if token is not expired\r\n  // }\r\n\r\n}\r\n\r\nasync function validateForceLogout(response,logOutIfSessionInvalid){\r\n  try {\r\n    if (logOutIfSessionInvalid == true && _sessionInvalidCallback && response.status == '401'){\r\n      await _sessionInvalidCallback();\r\n      cleanSession();\r\n    }      \r\n  }catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nasync function get({\r\n  resourcePath,\r\n  queryParams,\r\n  withAccessToken = false,\r\n  isBackend = true,\r\n  logOutIfSessionInvalid = true,\r\n  returnText=false\r\n}) {\r\n  let uri = getURI(isBackend, resourcePath);\r\n  // let uri = _host + 'backoffice/v1/' + resourcePath;\r\n  var options = {};\r\n  options.headers = initOptionHeader();\r\n  options.method = \"GET\";\r\n  if (withAccessToken == true || logOutIfSessionInvalid==true)\r\n    options.headers['Authorization'] = 'Bearer ' + _accessToken;\r\n  else\r\n    options.headers['api_key'] = _apiKey;\r\n\r\n  if (queryParams)\r\n    uri = uri + '?' + querystring.encode(cleanObj(queryParams));\r\n  console.log('GET: ', uri, options);\r\n  let response = await _fetchFn(uri, options);\r\n  let bodyText = await response.text()\r\n  console.log('Response - ' ,response.status , ' - Body:', (bodyText ? json2Obj(bodyText) : bodyText));\r\n  if (response.status == '200') {\r\n    if(returnText)\r\n      return { code: \"OK\", data: bodyText};\r\n    return { code: \"OK\", data: bodyText ? json2Obj(bodyText) : null };\r\n  } else\r\n  {\r\n    validateForceLogout(response,logOutIfSessionInvalid);\r\n    return { code: response.status, bodyText: bodyText, error: json2Obj(bodyText) };\r\n  }\r\n\r\n  //TODO: add token expire and validation later \r\n  // let accessToken;\r\n  // if (withAccessToken)\r\n  // {\r\n  //   //check if token is not expired\r\n  // }\r\n\r\n}\r\n\r\nasync function sendDelete({\r\n  resourcePath,\r\n  queryParams,\r\n  withAccessToken = false,\r\n  isBackend = false,\r\n  logOutIfSessionInvalid = true\r\n}) {\r\n  // let uri = getURI(isBackend, resourcePath);\r\n  let uri = _host + 'backoffice/v1/' + resourcePath;\r\n  var options = {};\r\n  options.headers = initOptionHeader();\r\n  options.method = \"DELETE\";\r\n  if (withAccessToken == true || logOutIfSessionInvalid==true)\r\n    options.headers['Authorization'] = 'Bearer ' + _accessToken;\r\n  else\r\n    options.headers['api_key'] = _apiKey;\r\n\r\n  if (queryParams)\r\n    uri = uri + '?' + querystring.encode(cleanObj(queryParams));\r\n  console.log('GET: ', uri, options);\r\n  let response = await _fetchFn(uri, options);\r\n  let bodyText = await response.text()\r\n  console.log('Response - ' ,response.status , ' - Body:', (bodyText ? json2Obj(bodyText) : bodyText));\r\n  if (response.status == '200') {\r\n    return { code: \"OK\", data: bodyText ? json2Obj(bodyText) : null };\r\n  } else\r\n  {\r\n    validateForceLogout(response,logOutIfSessionInvalid);\r\n    return { code: response.status, bodyText: bodyText, error: json2Obj(bodyText) };\r\n  }\r\n\r\n  //TODO: add token expire and validation later \r\n  // let accessToken;\r\n  // if (withAccessToken)\r\n  // {\r\n  //   //check if token is not expired\r\n  // }\r\n\r\n}\r\n\r\nasync function put({\r\n  resourcePath,\r\n  body,\r\n  queryParams,\r\n  withAccessToken = false,\r\n  isBackend = false, \r\n  logOutIfSessionInvalid = true\r\n}) {\r\n  // let uri = getURI(isBackend, resourcePath);\r\n  let uri = _host + 'backoffice/v1/' + resourcePath;\r\n  var options = {};\r\n  options.headers = initOptionHeader();\r\n  options.method = \"PUT\";\r\n  if (withAccessToken == true || logOutIfSessionInvalid==true)\r\n    options.headers['Authorization'] = 'Bearer ' + _accessToken;\r\n  else\r\n    options.headers['api_key'] = _apiKey;\r\n\r\n  if (body)\r\n    options.body = JSON.stringify(body);\r\n  if (queryParams)\r\n    uri = uri + '?' + querystring.encode(queryParams);\r\n  console.log('PUT: ', uri, options);\r\n  let response = await _fetchFn(uri, options);\r\n  let bodyText = await response.text()\r\n  console.log('Response - ' ,response.status , ' - Body:', (bodyText ? json2Obj(bodyText) : bodyText));\r\n  if (response.status == '200') {\r\n    return { code: \"OK\", data: bodyText ? json2Obj(bodyText) : null };\r\n  }\r\n  else\r\n  {\r\n    validateForceLogout(response,logOutIfSessionInvalid);\r\n    return { code: response.status, bodyText: bodyText, error: json2Obj(bodyText) };\r\n  }\r\n\r\n  //TODO: add token expire and validation later \r\n  // let accessToken;\r\n  // if (withAccessToken)\r\n  // {\r\n  //   //check if token is not expired\r\n  // }\r\n\r\n}\r\n\r\nasync function getAccessToken() {\r\n\r\n}\r\n\r\nfunction is200OK(result) {\r\n  if (result && result.status && result.status == '200')\r\n    return true;\r\n  else\r\n    return false;\r\n}\r\n\r\nfunction cleanObj(obj) {\r\n  for (var propName in obj) { \r\n    if (obj[propName] === null || obj[propName] === undefined) {\r\n      delete obj[propName];\r\n    }\r\n  }\r\n  return obj;\r\n}\r\n"],"names":["_storeKVFn","_getKVFn","_sessionInvalidCallback","_fetchFn","_apiKey","_accessToken","_refreshToken","_host","_sessionData","jwtDecode","require","httpBackOfficeUtil","setupChannel","_x","_setupChannel","apply","arguments","put","_x7","_put","post","get","_x5","_get","sendDelete","_x6","_sendDelete","is200OK","result","status","startSession","getSession","console","log","cleanObj","cleanSession","switchSession","_ref3","isMerchant","access_token","refresh_token","exp","_sessionServiceOwnerData","current_organisation_id","_selfServicePath","_backofficePath","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref","storeKVFn","getKVFn","sessionInvalidCallback","apiKey","host","fetchFn","wrap","_context","prev","next","fetch","sent","refreshToken","t0","undefined","stop","_refreshToken2","_callee2","currentTime","response","_context2","Date","now","abrupt","resourcePath","logOutIfSessionInvalid","code","data","_ref2","organisations","getURI","isBackend","json2Obj","str","JSON","parse","e","_x2","_post","_callee3","_ref4","body","queryParams","_ref4$withAccessToken","withAccessToken","_ref4$withoutApikey","withoutApikey","_ref4$logOutIfSession","uri","options","bodyText","_context3","headers","initOptionHeader","method","stringify","querystring","text","validateForceLogout","error","_x3","_x4","_validateForceLogout","_callee4","_context4","_callee5","_ref5","_ref5$withAccessToken","_ref5$isBackend","_ref5$logOutIfSession","_ref5$returnText","returnText","_context5","_callee6","_ref6","_ref6$withAccessToken","_ref6$isBackend","_ref6$logOutIfSession","_context6","_callee7","_ref7","_ref7$withAccessToken","_ref7$isBackend","_ref7$logOutIfSession","_context7","obj","propName"],"sourceRoot":""}