{"version":3,"file":"static/js/719.875a4753.chunk.js","mappings":"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","sources":["custom_src/pages/integrations/FACResult.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Button, Grid } from '@material-ui/core';\r\nimport { ErrorIcon, SuccessIcon } from '../../../components/IconComponent'\r\nimport Container from '../../../components/Container';\r\nimport crmservices from '../../../wsclient';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { config_path } from '../../../router/config.path';\r\nimport { Typography } from '@mui/material';\r\nimport { payment } from '../../wsclients/payment';\r\nimport { cacheCustom } from '../../cache';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nexport default function FACResult(props) {\r\n    const { t } = useTranslation();\r\n    const navigate = useNavigate();\r\n    const [showLoading, onShowLoading] = useState(true);\r\n    const [ready, setReady] = useState(true);\r\n    const [facResult, setFACResult] = useState(null);\r\n    const [crmResult, setCRMResult] = useState(null);\r\n\r\n    var _paymentData = cacheCustom.getPaymentData();\r\n\r\n    useEffect(() => {\r\n        onLoad();\r\n    }, []);\r\n\r\n    const onLoad = async () => {\r\n        var url = new URL(window.location.href);\r\n        console.log(\"url===\", url);\r\n        var clientTokenId = url.searchParams.get(\"ID\");\r\n        var respCode = url.searchParams.get(\"RespCode\");\r\n        var reasonCode = url.searchParams.get(\"ReasonCode\");\r\n\r\n        let payload = {\r\n            nonce: clientTokenId,\r\n            name: 'FAC',\r\n            respCode: respCode,\r\n            reasonCode: reasonCode,\r\n        };\r\n        let resultMapping = mappingCodeFAC(respCode, reasonCode);\r\n        console.log(\"resultMapping:\", resultMapping.success);\r\n        if (resultMapping && resultMapping.success) {\r\n            setReady(true);\r\n            if (_paymentData && _paymentData.type == 'PAYMENT') {\r\n                await onCreatePayment({\r\n                    token: payload.nonce,\r\n                    amount: _paymentData.amount,//fake data\r\n                })\r\n            } else if (_paymentData && _paymentData.type == 'ADD_CARD') {\r\n                await onAddPaymentMethod(payload);\r\n            }\r\n            setFACResult({\r\n                success: true,\r\n            });\r\n        } else {\r\n            setReady(true);\r\n            setFACResult(resultMapping);\r\n        }\r\n        onShowLoading(false);\r\n    }\r\n\r\n    const onAddPaymentMethod = async (payload) => {\r\n        console.log(\"payload:\", payload);\r\n        let facIntegration = document._portalConfig.facIntegration;\r\n        console.log(\"facIntegration1:\", facIntegration);\r\n\r\n        let createCustomerResult = await crmservices.payment.addPaymentMethod({\r\n            name: payload.name,\r\n            integration_id: facIntegration,\r\n            gateway_token: payload.nonce,\r\n            payment_method_type: \"CARD\",\r\n            gateway: null\r\n        }, {});\r\n        console.log('createCustomerResult ===', createCustomerResult)\r\n        if (createCustomerResult.code === 'OK') {\r\n            setCRMResult({\r\n                success: true,\r\n                message: 'CRM Add Payment method successfully',\r\n            });\r\n        }\r\n        else if (createCustomerResult.code === 'CUSTOMER_EMAIL_ALREADY_EXIST') {\r\n            setCRMResult({\r\n                success: false,\r\n                message: 'Add card failed',\r\n                respCode: createCustomerResult.code,\r\n                description: createCustomerResult.data && createCustomerResult.data.error && createCustomerResult.data.error.message ? createCustomerResult.data.error.message : t('CUSTOMER_EMAIL_ALREADY_EXIST'),\r\n            });\r\n        }\r\n        else {\r\n            setCRMResult({\r\n                success: false,\r\n                message: 'Add card failed',\r\n                respCode: createCustomerResult.data && createCustomerResult.data.code ? createCustomerResult.data.code : '',\r\n                description: createCustomerResult.data && createCustomerResult.data.error && createCustomerResult.data.error.message ? createCustomerResult.data.error.message : t('EXCEPTION_PROCESS'),\r\n            });\r\n        }\r\n        if (_paymentData && _paymentData.from == 'make_payment') {\r\n            setTimeout(() => {\r\n                navigate(config_path.home, { state: { target: 'make_payment' } })\r\n            }, 1000);\r\n        }\r\n    }\r\n\r\n    const onCreatePayment = async (payload) => {\r\n        let financial_transactions_payable = [];\r\n        if (payload.entity_id) financial_transactions_payable.push(payload.entity_id);\r\n        let result = await payment.createPayment({\r\n            amount: payload.amount,\r\n            transaction_id: payload.token,\r\n            financial_transactions_payable: financial_transactions_payable,\r\n        });\r\n        console.log('create payment on crm5 ===', result)\r\n        cacheCustom.setPaymentData(null);\r\n        if (result.code === 'OK') {\r\n            setCRMResult({\r\n                success: true,\r\n                message: t('CREATE_PAYMENT_SUCCESS'),\r\n            });\r\n        }\r\n        else if (result.code === 'CUSTOMER_EMAIL_ALREADY_EXIST') {\r\n            setCRMResult({\r\n                success: true,\r\n                message: t('CUSTOMER_EMAIL_ALREADY_EXIST'),\r\n            });\r\n        }\r\n        else {\r\n            setCRMResult({\r\n                success: false,\r\n                message: t('CREATE_PAYMENT_FAILED'),\r\n            });\r\n        }\r\n    }\r\n\r\n    console.log(\"AAAA facResult:\", facResult);\r\n    console.log(\"AAAA crmResult:\", crmResult);\r\n    console.log(\"AAAA ready:\", ready);\r\n\r\n    if (ready)\r\n        return (\r\n            <Container showProcessing={showLoading} >\r\n                <Grid xs={12} item>\r\n                    <Grid xs={12} item justify='center' container>\r\n                        {facResult && facResult.success && crmResult && crmResult.success && <SuccessIcon size={100} color=\"green\" />}\r\n                        {((facResult && !facResult.success) || (crmResult && !crmResult.success)) && <ErrorIcon size={100} color=\"red\" />}\r\n                    </Grid>\r\n                    <Grid xs={12} item justify='center' container>\r\n                        {facResult && <Grid item xs={12} style={{ textAlign: 'center' }}>\r\n                            {facResult.message && <Typography color={facResult.success ? \"success\" : 'error'} variant=\"h5\" mg_top_xl>{facResult.message}</Typography>}\r\n                            {facResult.description && <Typography color={facResult.success ? \"success\" : 'error'} variant=\"h5\" mg_top_md>{facResult.description}</Typography>}\r\n                            {facResult.note && <Typography color={facResult.success ? \"success\" : 'error'} variant=\"h5\" mg_top_md>{facResult.note}</Typography>}\r\n                            {facResult.respCode && facResult.reasonCode && <Typography color={facResult.success ? \"success\" : 'error'} variant=\"h5\" mg_top_md>{\"Error: FAC \"} {facResult.reasonCode}</Typography>}\r\n                        </Grid>}\r\n                    </Grid>\r\n                    <Grid xs={12} item justify='center' container>\r\n                        {crmResult && <Grid item xs={12} style={{ textAlign: 'center' }}>\r\n                            <Typography bold color={crmResult.success ? \"green\" : 'red'} variant=\"h5\" mg_top_xl>{crmResult.message ? crmResult.message : ''}</Typography>\r\n                            <Typography bold color={crmResult.success ? \"green\" : 'red'} variant=\"h5\" mg_top_xl>{crmResult.description ? crmResult.description : ''}</Typography>\r\n                            {crmResult.respCode && <Typography color={crmResult.success ? \"success\" : 'error'} variant=\"h5\" mg_top_md>{\"Error: CRM \"} {crmResult.respCode}</Typography>}\r\n                        </Grid>}\r\n                    </Grid>\r\n                    <Grid item xs={12} justify='center' container style={{ marginTop: 20 }}>\r\n                        <Button variant=\"contained\" onClick={() => navigate(config_path.home)} color=\"primary\">{\"Back to Home\"}</Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container >\r\n        );\r\n    else {\r\n        return (\r\n            <Container showProcessing={showLoading}>\r\n\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mappingCodeFAC(respCode, reasonCode) {\r\n    let result = {\r\n        respCode: respCode,\r\n        reasonCode: reasonCode,\r\n        success: false,\r\n        description: '',\r\n        note: '',\r\n        message: ''\r\n    };\r\n    if (respCode === '1' && reasonCode === '1') {\r\n        result = {\r\n            respCode: respCode,\r\n            reasonCode: reasonCode,\r\n            description: 'Normal Approval',\r\n            success: true,\r\n            message: 'Add card successfully.',\r\n        };\r\n    } else {\r\n        if (reasonCode == 'EX01') {\r\n            result.message = 'Add card failed.';\r\n        } else if (reasonCode == 'EX02') {\r\n            result.message = 'Payment failed.';\r\n        } else {\r\n            result.message = \"Transaction is declined.\"\r\n            let reasons = reasonCode.split(\"-\");\r\n            if (reasons && reasons.length > 0) {\r\n                let isoCode = reasons[0];\r\n                let errorCode = reasons.length == 1 ? reasons.length[1] : \"\";\r\n                if (isoCode == \"FC3\" || isoCode == \"34\") {\r\n                    result.description = 'Fraud check error.';\r\n                    result.note = 'Fraud check error.'\r\n                } else if (isoCode == \"03\") {\r\n                    result.description = 'Invalid Merchant.';\r\n                    result.note = 'Not such merchant.';\r\n                } else if (isoCode == \"05\") {\r\n                    result.description = 'Transaction is declined.';\r\n                    result.note = 'Default decline.';\r\n                } else if (isoCode == \"12\") {\r\n                    if (errorCode == \"315\") {\r\n                        result.description = 'Invalid card/currency';\r\n                        result.note = '';\r\n                    } else if (errorCode == \"321\") {\r\n                        result.description = 'Processing errors';\r\n                        result.note = '';\r\n                    } else if (errorCode == \"387\") {\r\n                        result.description = 'Duplicate transaction.';\r\n                        result.note = 'Duplicate TransactionIdentifier.';\r\n                    } else if (errorCode == \"370\") {\r\n                        result.description = 'Transaction mismatch.';\r\n                        result.note = 'Simulator transaction mismatch.';\r\n                    } else if (errorCode == \"546\") {\r\n                        result.description = '3DS1 error.';\r\n                        result.note = '3DS1 fallback not allowed.';\r\n                    } else if (errorCode == \"75\") {\r\n                        result.description = 'SPI error.';\r\n                        result.note = '';\r\n                    } else if (errorCode == \"758\") {\r\n                        result.description = 'HPP error.';\r\n                        result.note = 'Invalid HPP page.';\r\n                    } else {\r\n                        result.description = 'Invalid transaction.';\r\n                        result.note = '';\r\n                    }\r\n                } else if (isoCode == \"3D3\") {\r\n                    if (['519', '618', '518', '520'].includes(errorCode)) {\r\n                        result.description = '3DS1 system error.';\r\n                        result.note = '';\r\n                    } else if (['611', '511', '532', '548', '549', '510'].includes(errorCode)) {\r\n                        result.description = '3DS system error.';\r\n                        result.note = '';\r\n                    } else {\r\n                        result.description = '3DS2 system error.';\r\n                        result.note = '';\r\n                    }\r\n                } else if (isoCode == \"57\") {\r\n                    result.description = 'Invalid card type.';\r\n                    result.note = '';\r\n                } else if (isoCode == \"89\") {\r\n                    result.description = 'Failed authentication.';\r\n                    result.note = 'Invalid credentials.';\r\n                } else if (isoCode == \"91\") {\r\n                    result.description = 'Host timeout or error';\r\n                    result.note = '';\r\n                } else if (isoCode == \"96\") {\r\n                    result.description = 'Host processing or system error.';\r\n                    result.note = '';\r\n                } else if (isoCode == \"97\") {\r\n                    result.description = 'Request failed validation.';\r\n                    result.note = '';\r\n                } else {\r\n                    result.description = 'General error.';\r\n                    result.note = '';\r\n                }\r\n            } else {\r\n                result.description = 'System error.';\r\n                result.note = '';\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nconst styles = theme => ({\r\n    boxItemContent: {\r\n        padding: theme.spacing(5),\r\n        border: '1px solid',\r\n        borderColor: theme.palette.border.transparent,\r\n        backgroundColor: theme.palette.background.secondary,\r\n        borderRadius: theme.spacing(4),\r\n        boxShadow: '1px 2px 10px -6px rgba(0,0,0,0.75)',\r\n        cursor: 'pointer',\r\n    },\r\n});"],"names":["FACResult","props","t","useTranslation","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","showLoading","onShowLoading","_useState3","_useState4","ready","setReady","_useState5","_useState6","facResult","setFACResult","_useState7","_useState8","crmResult","setCRMResult","_paymentData","cacheCustom","getPaymentData","useEffect","onLoad","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","clientTokenId","respCode","reasonCode","payload","resultMapping","wrap","_context","prev","next","URL","window","location","href","console","log","searchParams","get","nonce","name","mappingCodeFAC","success","type","onCreatePayment","token","amount","onAddPaymentMethod","stop","apply","arguments","_ref2","_callee2","facIntegration","createCustomerResult","_context2","document","_portalConfig","crmservices","payment","addPaymentMethod","integration_id","gateway_token","payment_method_type","gateway","sent","code","message","description","data","error","from","setTimeout","config_path","home","state","target","_x","_ref3","_callee3","financial_transactions_payable","result","_context3","entity_id","push","createPayment","transaction_id","setPaymentData","_x2","_jsx","Container","showProcessing","children","_jsxs","Grid","xs","item","justify","container","SuccessIcon","size","color","ErrorIcon","style","textAlign","Typography","variant","mg_top_xl","mg_top_md","note","bold","marginTop","Button","onClick","reasons","split","length","isoCode","errorCode","includes"],"sourceRoot":""}