{"version":3,"file":"static/js/40.d14a3e9e.chunk.js","mappings":"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","sources":["pages/orders/OrderMainPageView.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { useTranslation } from 'react-i18next'\r\nimport Container from '../../components/Container'\r\nimport SubHeader from '../../components/SubHeader'\r\nimport { wallet_shortcuts } from '../../menu.config'\r\nimport { cache, order_key } from '../../utils/cache'\r\nimport { checkActionPermission, getContentByOrganisations, getContentByProducts, getContentByTiming, getShortcuts } from '../../utils/common'\r\nimport { Badge, Box, Button, Chip, CircularProgress, Grid, Hidden, IconButton, Stack, TablePagination, Typography, useTheme } from '@mui/material'\r\nimport { commonFont } from '../../theme'\r\nimport DataTable from '../../components/DataTable'\r\nimport CardComponent from '../../components/Card'\r\nimport { ordersTableConfig } from '../../datatable.config'\r\nimport { Link } from 'react-router-dom'\r\nimport DrawerComponent from '../../components/Drawer'\r\nimport Modal from '../../components/Modal'\r\nimport DeliveryAddressesController from './DeliveryAddressesController'\r\nimport MyOrderDetailController from '../my-orders/MyOrderDetailController'\r\nimport { formatAmount, formatDateToDDMMYYYYHHSSFrEpoch, mappingValue } from '../../utils/util'\r\nimport InfiniteScroll from 'react-infinite-scroll-component'\r\nimport PickupStoreController from './PickupStoreController'\r\nimport CurrentLocationController from './CurrentLocationController'\r\nimport AddressMapController from '../my-addresses/AddressMapController'\r\nimport AddAddressController from '../my-addresses/AddAddressController'\r\nimport OrderCataloguesController from './OrderCataloguesController'\r\nimport { custom_page } from '../../custom.config'\r\nimport { dataUtil } from '../../wsclient/crmservices/dataUtil'\r\nimport { enumConfig, portal_config } from '../../portal.config'\r\n\r\nconst AddAddressPage = custom_page.my_address && custom_page.my_address.add_address && custom_page.my_address.add_address.controller ? require('../../custom_src/pages/my-addressres/AddAddressController').default : AddAddressController;\r\nconst AddressMapPage = custom_page.my_address && custom_page.my_address.address_map && custom_page.my_address.address_map.controller ? require('../../custom_src/pages/my-addressres/AddressMapController').default : AddressMapController;\r\n\r\nexport default function OrderMainPageView(props) {\r\n    const appConfig = cache.getAppConfig();\r\n    let isOrders = appConfig && appConfig.features && appConfig.features.contact && appConfig.features.contact.order && appConfig.features.contact.order.is_supported ? appConfig.features.contact.order.is_supported : false;\r\n    let isOrdersDelivery = appConfig && appConfig.features && appConfig.features.contact && appConfig.features.contact.order && appConfig.features.contact.order.is_supported && appConfig.features.contact.order.delivery && appConfig.features.contact.order.delivery.is_supported ? true : false;\r\n    let isOrdersPickUp = appConfig && appConfig.features && appConfig.features.contact && appConfig.features.contact.order && appConfig.features.contact.order.is_supported && appConfig.features.contact.order.pick_up && appConfig.features.contact.order.pick_up.is_supported ? true : false;\r\n    let isOrdersDirectSale = appConfig && appConfig.features && appConfig.features.contact && appConfig.features.contact.order && appConfig.features.contact.order.is_supported && appConfig.features.contact.order.direct_sale && appConfig.features.contact.order.direct_sale.is_supported ? true : false;\r\n    const { t } = useTranslation();\r\n    const { my_orders, currentLocation, showLoadingMyOrders, showDrawer, paging} = props;\r\n    const [rowsPerPage, setRowsPerPage] = useState(paging && paging.size ? paging.size : 10);\r\n\r\n    const { palette } = useTheme();\r\n    console.log(\"showDrawer:\", showDrawer);\r\n\r\n    const getStoreName = () => {\r\n        const order_type = cache.getOrderType();\r\n        const store = order_type == \"DELIVERY\" ? cache.getCacheByKey(order_key.delivery_fulfilled_by) : cache.getCacheByKey(order_key.pick_up_store);\r\n        return store ? store.name : \"\";\r\n    }\r\n    \r\n    const handleChangePage = (event, newPage) => {\r\n        props.handleChangePage(newPage + 1);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        let value = event.target.value;\r\n        let _size = paging.size ? paging.size : 10;\r\n        console.log(\"AAA parseInt(value, _size): \", parseInt(value, _size))\r\n        setRowsPerPage(value);\r\n        props.handleChangeRowsPerPage(value);\r\n    };\r\n    let isAllowAction = checkActionPermission(enumConfig.contactPermissions.ORDERS_MANAGEMENT);\r\n\r\n    return (\r\n        <Container showHeader={true} showProcessing={props.showProcessing} showFooter={true} message={props.message}\r\n            subHeader={<SubHeader title={t('orders_title')} variant={'action-buttons'} action={\r\n                <>\r\n                    {isOrders && <Stack direction={'row'} spacing={1}>\r\n                        {isOrdersPickUp && <Button sx={{\r\n                            borderRadius: 32,\r\n                            height: 32,\r\n                            padding: undefined,\r\n                            fontFamily: commonFont.medium,\r\n                            borderColor: palette.border.dark,\r\n                            \"&.MuiButtonBase-root:hover\": {\r\n                                borderColor: 'transparent',\r\n                            }\r\n                        }} variant='outlined' size='small' disabled={!isAllowAction} color={'shortcut'} onClick={props.onClickPickUp} id='orderMain/btnPickUp'>\r\n                            {t('pickup')}\r\n                        </Button>}\r\n                        {isOrdersDelivery && <Button sx={{\r\n                            borderRadius: 32,\r\n                            height: 32,\r\n                            padding: undefined,\r\n                            fontFamily: commonFont.medium,\r\n                            borderColor: palette.border.dark,\r\n                            \"&.MuiButtonBase-root:hover\": {\r\n                                borderColor: 'transparent',\r\n                            }\r\n                        }} variant='outlined' size='small' disabled={!isAllowAction} color={'shortcut'} onClick={props.onClickDelivery} id='orderMain/btnDelivery'>\r\n                            {t('delivery')}\r\n                        </Button>}\r\n                        {isOrdersDirectSale && <Button sx={{\r\n                            borderRadius: 32,\r\n                            height: 32,\r\n                            padding: undefined,\r\n                            fontFamily: commonFont.medium,\r\n                            borderColor: palette.border.dark,\r\n                            \"&.MuiButtonBase-root:hover\": {\r\n                                borderColor: 'transparent',\r\n                            }\r\n                        }} variant='outlined' size='small' disabled={!isAllowAction} color={'shortcut'} onClick={props.onClickDirectSale} id='orderMain/btnDirectSale'>\r\n                            {t('order_direct_sale')}\r\n                        </Button>}\r\n                    </Stack>}\r\n                </>\r\n            } />}\r\n        >\r\n            <CardComponent noBorder marginTop={3}\r\n                // header={{\r\n                //     title: t('order_my_orders')\r\n                // }}\r\n                >\r\n                {showLoadingMyOrders ? <center><CircularProgress /></center> :\r\n                    <>\r\n                        <Hidden mdDown>\r\n                            <DataTable data={my_orders ? my_orders : []}\r\n                                tableConfig={ordersTableConfig}\r\n                                enablePaging={true}\r\n                                paging={{ ...props.paging, size: props.size ? props.size : undefined }}\r\n                                handleChangePage={props.handleChangePage}\r\n                                handleChangeRowsPerPage={props.handleChangeRowsPerPage}\r\n                                onReOrder={props.onReOrder}\r\n                                onShowDetail={props.onShowDetail}\r\n                                disabledAction={!isAllowAction}\r\n                            />\r\n                        </Hidden>\r\n                        <Hidden mdUp>\r\n                            {/* <InfiniteScroll\r\n                                dataLength={my_orders.length} //This is important field to render the next data\r\n                                next={props.handleLoadMore}\r\n                                hasMore={props.hasMore}\r\n                                height={window.innerHeight - 100}\r\n                                loader={props.showLoadMore ? <center><CircularProgress /></center> : <h4>{\"\"}</h4>}\r\n                            > */}\r\n                                <Grid xs={12} item>\r\n                                    {my_orders.map((item, index) => {\r\n                                        return(\r\n                                            <Box key={index} mb={1}>\r\n                                                <OrderItem \r\n                                                    item={item}\r\n                                                    onReOrder={props.onReOrder}\r\n                                                    isAllowAction={isAllowAction}\r\n                                                />\r\n                                            </Box>\r\n                                        )\r\n                                    })}\r\n                                    <TablePagination\r\n                                        component=\"div\"\r\n                                        count={paging.total}\r\n                                        onPageChange={handleChangePage}\r\n                                        rowsPerPage={rowsPerPage}\r\n                                        page={paging.page ? paging.page - 1 : 0}\r\n                                        onRowsPerPageChange={handleChangeRowsPerPage}\r\n                                    />\r\n                                </Grid>\r\n                            {/* </InfiniteScroll> */}\r\n                        </Hidden>\r\n                    </>\r\n                }\r\n            </CardComponent>\r\n            {props.orderDetail && <MyOrderDetailController \r\n                orderSelected={props.orderDetail} \r\n                isOpen={props.showDetail} \r\n                onClose={() => props.setShowDetail(false)}\r\n            />}\r\n            {props.showAddresses && <Modal enableCloseButton maxWidth={\"md\"} isOpen={props.showAddresses} title={t('select_your_delivery_address')} onClose={() => props.setShowAddresses(false)}>\r\n                <DeliveryAddressesController currentLocation={currentLocation} onSelectAddress={props.onSelectAddress} onAddNewAddress={props.onAddNewAddress}/>    \r\n            </Modal>}\r\n            {props.showCurrentLocation && <Modal enableCloseButton maxWidth={\"md\"} isOpen={props.showCurrentLocation} title={t('my_address')} onClose={() => props.setShowCurrentLocation(false)}>\r\n                <CurrentLocationController currentLocation={currentLocation} onGoBack={props.onGoBackFromCurrrentLocation} onSelectAddressMap={props.onSelectAddressMap}/>    \r\n            </Modal>}\r\n            {props.showPickUpStore && <PickupStoreController \r\n                onClose={() => props.setShowPickUpStore(false)} \r\n                isOpen={props.showPickUpStore} \r\n                showMessage={props.showMessage} \r\n                currentLocation={currentLocation} \r\n                onGoBackPickUpStore={props.onGoBackPickUpStore}/> }\r\n            {props.showAddressMap && <AddressMapPage \r\n                open={props.showAddressMap}\r\n                onClose={() => props.setShowAddressMap(false)}\r\n                onGoBackFn={props.onCloseSelectAddressMap}\r\n            />}\r\n            {props.showAddAddress && <AddAddressPage\r\n                open={props.showAddAddress}\r\n                address_info={currentLocation && currentLocation.location_detail ? currentLocation.location_detail : null}\r\n                mode={'add'}\r\n                onClose={() => props.setShowAddAddress(false)}\r\n                onRefresh={() => props.setShowAddresses(true)}\r\n            />}\r\n            {props.showCatalog && <OrderCataloguesController\r\n                catalogues={props.catalogues}\r\n                open={props.showCatalog}\r\n                onClose={() => props.setShowCatalog(false)}\r\n            />}\r\n        </Container>\r\n    )\r\n}\r\n\r\nfunction OrderItem(props){\r\n    const { item, onReOrder, isAllowAction } = props;\r\n    const { t } = useTranslation();\r\n    const { palette } = useTheme();\r\n    const currency = cache.getCurrency();\r\n    let stateColor = 'info';\r\n    if(item.state == 'COMPLETED') stateColor = 'success';\r\n    else if(item.state == 'CANCELLED') stateColor = 'error'\r\n    else if(item.state == 'NEW') stateColor = 'info'\r\n\r\n    let supplyMethodColor = 'info';\r\n    if(item.supply_method == 'PICK_UP') supplyMethodColor = 'custom1';\r\n    else if(item.supply_method == 'DELIVERY') supplyMethodColor = 'custom2'\r\n    else if(item.supply_method == 'DIRECT_SALE') supplyMethodColor = 'custom3'\r\n    let orderItems = dataUtil.createItemsWithComponents(item.items);\r\n\r\n    const getComponent = items => {\r\n        var componentStr = '';\r\n        items.forEach(item => {\r\n            componentStr = componentStr + item.name + \", \";\r\n        });\r\n        if (componentStr) {\r\n            componentStr = componentStr.substr(0, componentStr.length - 2);\r\n        }\r\n        return componentStr;\r\n    }\r\n    return(\r\n        <CardComponent paddingY={1} paddingX={2}>\r\n            <Stack direction={'row'} alignItems='center' spacing={1} mb={1}>\r\n                <Stack direction='row' alignItems='center' spacing={1} flex={1}>\r\n                    <Chip size='small' variant='customOutlined' sx={{ background: palette[stateColor].light, color: palette[stateColor].main}} label={t(mappingValue(item.state))}/>\r\n                    <Chip size='small' variant='customOutlined' sx={{ background: palette[supplyMethodColor].light, color: palette[supplyMethodColor].main}} label={t(mappingValue(item.supply_method))}/>\r\n                </Stack>\r\n                {item.supply_method != 'DIRECT_SALE' && <Stack flex={0.3} direction='row' justifyContent={'flex-end'}>\r\n                    <Button variant='text' id={'orders/ReOrder/' + item.number} sx={{paddingY: 0}} disabled={!isAllowAction} onClick={(e) => onReOrder(e, item)}>{t('re-order')}</Button>\r\n                </Stack>}\r\n            </Stack>\r\n            <Stack direction={'row'} alignItems='center' spacing={1}>\r\n                <Stack flex={1}>\r\n                    <Typography variant='body2'>{item.fulfilled_by && item.fulfilled_by.name ? item.fulfilled_by.name : null}</Typography>\r\n                </Stack>\r\n                <Stack flex={0.3} direction='row' justifyContent={'flex-end'}>\r\n                    <Typography variant='body2'>{currency}{item.total ? formatAmount(item.total, portal_config.isFormatDecimalBalance) : '0.00'}</Typography>\r\n                </Stack>\r\n            </Stack>\r\n            <Stack direction={'row'} alignItems='center' spacing={1}>\r\n                <Stack flex={1}>\r\n                    <Typography variant='subtitle2'>{item.submitted_date ? formatDateToDDMMYYYYHHSSFrEpoch(item.submitted_date) : null}</Typography>\r\n                </Stack>\r\n            </Stack>\r\n            <Box mt={0.5}>\r\n                {orderItems.map((i, index) => {\r\n                    if(i.product && i.product.classification != \"EXPENSES_SERVICE\"){\r\n                        return (\r\n                            <Box key={index}>\r\n                                <Stack direction={'row'} key={index}>\r\n                                    <Typography variant='subtitle2' component={'span'}>{i.product.quantity}{\" x \"}</Typography>\r\n                                    <Typography variant='subtitle2' fontWeight={'bold'} component={'span'} pl={0.5}>{i.product.name}</Typography>\r\n                                </Stack>\r\n                                {i.product.components && i.product.components.length > 0 ? <Typography variant=\"subtitle2\">{getComponent(i.product.components)}</Typography> : null}\r\n                            </Box>\r\n                        )\r\n                    } else return null;\r\n                })}\r\n            </Box>\r\n        </CardComponent>\r\n    )\r\n}"],"names":["AddAddressPage","custom_page","my_address","add_address","controller","require","AddAddressController","AddressMapPage","address_map","AddressMapController","OrderMainPageView","props","appConfig","cache","getAppConfig","isOrders","features","contact","order","is_supported","isOrdersDelivery","delivery","isOrdersPickUp","pick_up","isOrdersDirectSale","direct_sale","t","useTranslation","my_orders","currentLocation","showLoadingMyOrders","showDrawer","paging","_useState","useState","size","_useState2","_slicedToArray","rowsPerPage","setRowsPerPage","palette","useTheme","console","log","isAllowAction","checkActionPermission","enumConfig","contactPermissions","ORDERS_MANAGEMENT","_jsxs","Container","showHeader","showProcessing","showFooter","message","subHeader","_jsx","SubHeader","title","variant","action","_Fragment","children","Stack","direction","spacing","Button","sx","borderRadius","height","padding","undefined","fontFamily","commonFont","medium","borderColor","border","dark","disabled","color","onClick","onClickPickUp","id","onClickDelivery","onClickDirectSale","CardComponent","noBorder","marginTop","CircularProgress","Hidden","mdDown","DataTable","data","tableConfig","ordersTableConfig","enablePaging","_objectSpread","handleChangePage","handleChangeRowsPerPage","onReOrder","onShowDetail","disabledAction","mdUp","Grid","xs","item","map","index","Box","mb","OrderItem","TablePagination","component","count","total","onPageChange","event","newPage","page","onRowsPerPageChange","value","target","_size","parseInt","orderDetail","MyOrderDetailController","orderSelected","isOpen","showDetail","onClose","setShowDetail","showAddresses","Modal","enableCloseButton","maxWidth","setShowAddresses","DeliveryAddressesController","onSelectAddress","onAddNewAddress","showCurrentLocation","setShowCurrentLocation","CurrentLocationController","onGoBack","onGoBackFromCurrrentLocation","onSelectAddressMap","showPickUpStore","PickupStoreController","setShowPickUpStore","showMessage","onGoBackPickUpStore","showAddressMap","open","setShowAddressMap","onGoBackFn","onCloseSelectAddressMap","showAddAddress","address_info","location_detail","mode","setShowAddAddress","onRefresh","showCatalog","OrderCataloguesController","catalogues","setShowCatalog","currency","getCurrency","stateColor","state","supplyMethodColor","supply_method","orderItems","dataUtil","createItemsWithComponents","items","getComponent","componentStr","forEach","name","substr","length","paddingY","paddingX","alignItems","flex","Chip","background","light","main","label","mappingValue","justifyContent","number","e","Typography","fulfilled_by","formatAmount","portal_config","isFormatDecimalBalance","submitted_date","formatDateToDDMMYYYYHHSSFrEpoch","mt","i","product","classification","quantity","fontWeight","pl","components"],"sourceRoot":""}