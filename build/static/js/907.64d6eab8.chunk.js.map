{"version":3,"file":"static/js/907.64d6eab8.chunk.js","mappings":"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","sources":["pages/my-cards/MyCardsView.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Box, CircularProgress, Grid, Typography, Stack, IconButton, useTheme, ListItem, Button, Chip} from '@mui/material'\r\nimport { useTranslation } from 'react-i18next'\r\nimport Container from '../../components/Container'\r\nimport SubHeader from '../../components/SubHeader'\r\nimport { cache } from '../../utils/cache'\r\nimport { DefaultCardIcon, DeleteIcon, MyCardMainIcon, RadioCheckedIcon, RadioIcon, RemoveIcon } from '../../components/IconComponent'\r\nimport AddCardController from './AddCardController'\r\nimport DrawerComponent from '../../components/Drawer'\r\nimport { custom_page } from '../../custom.config';\r\nimport { getCardIcon } from '../../utils/util'\r\n//TODO Deprecated file-Not deleted due to custom page implementation\r\n\r\nconst AddCardsPage = custom_page.add_card && custom_page.add_card.controller ? require('../../custom_src/pages/my-cards/AddCardController').default : AddCardController;\r\nconst JCC = 'JCC';\r\nexport default function MyCardsView(props){\r\n    const appConfig = cache.getAppConfig();\r\n    const { t } = useTranslation();\r\n    const { palette } = useTheme();\r\n    const { cards, } = props;\r\n    const [showRemoveCardOrder, setShowRemoveCardOrder] = useState(false);\r\n\r\n    let isRewards = appConfig && appConfig.features && appConfig.features.contact && appConfig.features.contact.reward && appConfig.features.contact.reward.is_supported ? appConfig.features.contact.reward.is_supported : false;\r\n    let isOrders = appConfig && appConfig.features && appConfig.features.contact && appConfig.features.contact.order && appConfig.features.contact.order.is_supported ? appConfig.features.contact.order.is_supported : false;\r\n    let return_cashback = appConfig && appConfig.features && appConfig.features.contact && appConfig.features.contact.reward && appConfig.features.contact.reward.return_cashback;\r\n    if (return_cashback) {\r\n        isRewards = true;\r\n    } else {\r\n        isRewards = false;\r\n    }\r\n    \r\n\r\n    return(\r\n        <>\r\n            <DrawerComponent title={t('my_cards')} isOpen={props.open} onClose={props.onClose} showProcessing={props.showProcessing} message={props.message}>\r\n                {isOrders && <Box>\r\n                    <Grid item direction={'row'} my={4} container xs={12}>\r\n                        <Grid item xs={12} container alignContent={'center'}>\r\n                            <Typography variant='h6'>{t('my_cards_orders')}</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12} container justifyContent={'flex-end'} alignContent={'center'}>\r\n                            <IconButton sx={{ background: 'transparent'}} onClick={()=>setShowRemoveCardOrder((prev)=>(!prev))}>\r\n                                {showRemoveCardOrder?<Typography>Done</Typography>:<DeleteIcon color=\"#8D3395\"/>}\r\n                            </IconButton>\r\n                        </Grid>\r\n                    </Grid>\r\n                    {props.showLoading && <Grid item justifyContent={'center'} container><CircularProgress marginTop={0.5} size={'1.75rem'} /></Grid> }\r\n                    {cards && cards.map((item, index)=>{\r\n                        let gatewayToken = item.card && item.card.gateway_token && item.card.gateway_token.length > 0 ? item.card.gateway_token[0] : null;\r\n                        if (gatewayToken && gatewayToken.gateway === JCC)\r\n                        return(\r\n                            <ListItem key={index} sx={{ borderBottom: index == cards.length - 1 ? 'none' : '1px solid', borderColor: '#f1f1f1'}}>\r\n                                <Grid item xs={12} direction={'row'} container >\r\n                                    <Grid item xs={10} container alignContent={'center'}>\r\n                                        {item.card && item.card.brand ? getCardIcon(item.card.brand) : <DefaultCardIcon />}\r\n                                        <Typography marginLeft={5} variant='h6' sx={{ display: 'flex', alignItems: 'center'}}>**** {item.card?item.card.last4:''} {item.is_primary && <Typography paddingLeft={1} variant='subtitle2' color={palette.success.main} component={'span'}>Primary</Typography>}</Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={2} container justifyContent={'flex-end'} alignContent={'center'}>\r\n                                        <IconButton sx={{background:'transparent'}} disabled={!showRemoveCardOrder && item.is_primary}\r\n                                            onClick={showRemoveCardOrder ? () => props.onRemoveCard(item) : () => props.onSetPrimaryCard(item)}\r\n                                        >\r\n                                            {showRemoveCardOrder ? <RemoveIcon color={palette.error.main}/> : (item.is_primary ? <RadioCheckedIcon /> : <RadioIcon />)}\r\n                                        </IconButton>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </ListItem>\r\n                        )\r\n                    })}\r\n                    <Button id='myCards/btnAddACardOrder' variant='contained' fullWidth='true' sx={{marginTop:4, borderRadius: 4}} onClick={props.onShowAddCardForm}>{t('add_a_card')}</Button>\r\n                </Box>}\r\n\r\n                {isRewards && <Box>\r\n                    <Grid item direction={'row'} my={4} container xs={12}>\r\n                        <Grid item xs={12} container alignContent={'center'}>\r\n                            <Typography variant='h6'>{t('my_cards_rewards')}</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12} container justifyContent={'flex-end'} alignContent={'center'}>\r\n                            <IconButton sx={{ background: 'transparent'}} onClick={()=>setShowRemoveCardOrder((prev)=>(!prev))}>\r\n                                {showRemoveCardOrder?<Typography>Done</Typography>:<DeleteIcon color=\"#8D3395\"/>}\r\n                            </IconButton>\r\n                        </Grid>\r\n                    </Grid>\r\n                    {props.showLoading && <Grid item justifyContent={'center'} container><CircularProgress marginTop={0.5} size={'1.75rem'} /></Grid> }\r\n                    {cards && cards.map((item, index)=>{\r\n                        let gatewayToken = item.card && item.card.gateway_token && item.card.gateway_token.length > 0 ? item.card.gateway_token[0] : null;\r\n                        if (gatewayToken && gatewayToken.gateway === 'JCC_MERCHANT')\r\n                        return(\r\n                            <ListItem key={index} sx={{ borderBottom: index == cards.length - 1 ? 'none' : '1px solid', borderColor: '#f1f1f1'}}>\r\n                                <Grid item direction={'row'} container >\r\n                                    <Grid item xs={12} container alignContent={'center'}>\r\n                                        {item.card && item.card.brand ? getCardIcon(item.card.brand) : <DefaultCardIcon />}\r\n                                        <Typography marginLeft={5} variant='h6' sx={{ display: 'flex', alignItems: 'center'}}>**** {item.card?item.card.last4:''} {item.is_primary && <Typography paddingLeft={1} variant='subtitle2' color={palette.success.main} component={'span'}>Primary</Typography>}</Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} container justifyContent={'flex-end'} alignContent={'center'}>\r\n                                        <IconButton sx={{background:'transparent'}} disabled={!showRemoveCardOrder && item.is_primary}\r\n                                            onClick={showRemoveCardOrder ? () => props.onRemoveCard(item) : () => props.onSetPrimaryCard(item)}\r\n                                        >\r\n                                            {showRemoveCardOrder ? <RemoveIcon color={palette.error.main}/> : (item.is_primary ? <RadioCheckedIcon /> : <RadioIcon />)}\r\n                                        </IconButton>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </ListItem>\r\n                        )\r\n                    })}\r\n                    <Button id='myCards/btnAddACardReward' variant='contained' fullWidth={true} sx={{marginTop:4, borderRadius: 4}} onClick={props.onShowAddCardForm}>{t('add_a_card')}</Button>\r\n                </Box>}\r\n\r\n            </DrawerComponent>\r\n            \r\n            {props.showAddCardForm && <AddCardsPage \r\n                isOpen={props.showAddCardForm}\r\n                onClose={props.onShowAddCardForm}\r\n            />}\r\n            \r\n        </>\r\n    )\r\n}"],"names":["AddCardsPage","custom_page","add_card","controller","require","AddCardController","JCC","MyCardsView","props","appConfig","cache","getAppConfig","t","useTranslation","palette","useTheme","cards","_useState","useState","_useState2","_slicedToArray","showRemoveCardOrder","setShowRemoveCardOrder","isRewards","features","contact","reward","is_supported","isOrders","order","return_cashback","_jsxs","_Fragment","children","DrawerComponent","title","isOpen","open","onClose","showProcessing","message","Box","Grid","item","direction","my","container","xs","_jsx","alignContent","Typography","variant","justifyContent","IconButton","sx","background","onClick","prev","DeleteIcon","color","showLoading","CircularProgress","marginTop","size","map","index","gatewayToken","card","gateway_token","length","gateway","ListItem","borderBottom","borderColor","brand","getCardIcon","DefaultCardIcon","marginLeft","display","alignItems","last4","is_primary","paddingLeft","success","main","component","disabled","onRemoveCard","onSetPrimaryCard","RemoveIcon","error","RadioCheckedIcon","RadioIcon","Button","id","fullWidth","borderRadius","onShowAddCardForm","showAddCardForm"],"sourceRoot":""}