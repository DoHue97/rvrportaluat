{"version":3,"file":"static/js/498.17d25c21.chunk.js","mappings":"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","sources":["pages/locations/LocationMerchantsView.js"],"sourcesContent":["import { CircularProgress, ListItem, ListItemText, TextField, Typography, useTheme, Grid, alpha } from \"@mui/material\";\r\nimport { Box, Stack } from \"@mui/system\";\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport DrawerComponent from \"../../components/Drawer\";\r\nimport { EmailIcon, FilterIcon, PhoneIcon, SearchIcon, ShopsIcon } from \"../../components/IconComponent\";\r\nimport { getLogoImage } from \"../../utils/common\";\r\nimport { dataUtil, usage_type } from \"../../wsclient/crmservices/dataUtil\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport ResponsiveImages from \"../../components/ReponsiveImages\";\r\n\r\nexport default function LocationMerchantsView(props) {\r\n    const { t } = useTranslation();\r\n    const { palette } = useTheme();\r\n    const classes = useStyles();\r\n    const { showLoading, merchants, onSelectMerchant, onOpenFilter, showSuggestBox, searchValue } = props;\r\n    // console.log(\"AAAA LocationMerchantsView props: \", props)\r\n    return (\r\n        <DrawerComponent isOpen={props.open} onClose={props.onClose}>\r\n            <Box position={'relative'}>\r\n                <Box width={'100%'} border={'1px solid ' + palette.border.main} borderRadius={2}>\r\n                    <TextField name=\"locationMerchants/Search\"\r\n                        InputProps={{\r\n                            startAdornment: <Box pr={1}><SearchIcon /></Box>,\r\n                            endAdornment: <Stack direction={'row'} alignItems='center' spacing={1}>\r\n                                <Box sx={{cursor: 'pointer'}} width={30} height={30} display='flex' alignItems={'center'} justifyContent='center' borderRadius={1} backgroundColor={palette.background.icon}>\r\n                                    <ShopsIcon color={palette.primary.main}/>\r\n                                </Box>\r\n                                <Box sx={{cursor: 'pointer'}} onClick={() => onOpenFilter()} id='locationMerchants/ShowFilters' width={30} height={30} display='flex' alignItems={'center'} justifyContent='center' borderRadius={1} backgroundColor={palette.background.icon}>\r\n                                    <FilterIcon />\r\n                                </Box>\r\n                            </Stack>\r\n                        }}\r\n                        value={searchValue ? searchValue : ''}\r\n                        onChange={(e) => props.onHandleChange(e.target.value, 'merchantpage')}\r\n                        onKeyPress={(e) => {\r\n                            if(e.key == 13 || e.key.toLowerCase() == 'enter'){\r\n                                props.triggerChange(e.target.value)\r\n                            }\r\n                        }}\r\n                    />\r\n                </Box>\r\n                {/* {showSuggestBox && searchValue && merchants.length > 0 && <Box position={'absolute'} maxHeight={300} overflow='auto' top={50} border={'1px solid ' + palette.border.main} backgroundColor={palette.background.paper} width='100%' borderRadius={1}>\r\n                    {merchants.map((item, index) => {\r\n                        return (\r\n                            <ListItem key={index} onClick={() => onSelectMerchant(item)}>\r\n                                <ListItemText>{item.name}</ListItemText>\r\n                            </ListItem>\r\n                        )\r\n                    })}\r\n                </Box>} */}\r\n            </Box>\r\n            {showLoading && <center><CircularProgress size={'1.25rem'} /></center>}\r\n            {merchants && <Box mt={2}>\r\n                <Grid item xs={12}>\r\n                    {merchants.map((item, index) => {\r\n                        let distance = item.address && item.address.distance ? item.address.distance.toFixed(2) : null;\r\n                        let address = '';\r\n                        if (item.address) {\r\n                            if (item.address.address_line_1) {\r\n                                address = address + item.address.address_line_1;\r\n                            }\r\n                            if (item.address.address_line_2) {\r\n                                address = address + \", \" + item.address.address_line_2;\r\n                            }\r\n                            if (item.address.town_city) {\r\n                                address = address + \", \" + item.address.town_city;\r\n                            }\r\n                        }\r\n                        var phone_number = null;\r\n                        var email = null;\r\n                        if (item.contact_info) {\r\n                            item.contact_info.forEach((item) => {\r\n                                if (item.type === \"PHONE\") {\r\n                                    phone_number = item.value;\r\n                                } else if (item.type === \"EMAIL\") {\r\n                                    email = item.value;\r\n                                }\r\n                            });\r\n                            // console.log(\"phone number:\", item.name + \"- \" + phone_number);\r\n                        }\r\n                        var covertToKM = 0;\r\n                        if (distance) covertToKM = distance * 1.6;\r\n                        if (covertToKM) covertToKM = covertToKM.toFixed(2);\r\n                        let imageSources = dataUtil.getImageByUsageTypePortal(item.creatives, usage_type.offer_detail_merchant);\r\n                        return (\r\n                            <Box key={index} py={2} sx={\r\n                                {\r\n                                    cursor: 'pointer', \r\n                                    ':hover': {\r\n                                        background: alpha(palette.primary.main, 0.11)\r\n                                    }\r\n                                }\r\n                            } onClick={() => onSelectMerchant(item)}>\r\n                                <Stack key={index} direction='row' spacing={1} alignItems='center'>\r\n                                    <Stack>\r\n                                        {/* <MerchantImage image={dataUtil.getImageByUsageTypePortal(item.creatives, usage_type.offer_detail_merchant)} /> */}\r\n                                        {imageSources && imageSources.length > 0 ? <ResponsiveImages ratio={16/9} media={imageSources} classes={classes.item_image} /> \r\n                                        : <img src={getLogoImage()} width={80} height={80} style={{ objectFit: 'contain' }} />}\r\n                                    </Stack>\r\n                                    <Stack pl={1}>\r\n                                        <Typography variant=\"body1\">{item.name}</Typography>\r\n                                        {address && <Typography variant=\"subtitle2\">{address}</Typography>}\r\n                                        {phone_number && <Stack direction={'row'} alignItems='center' spacing={1}>\r\n                                            <PhoneIcon />\r\n                                            <Typography variant=\"subtitle2\">{phone_number}</Typography>\r\n                                        </Stack>}\r\n                                        {email && <Stack direction={'row'} alignItems='center' spacing={1}>\r\n                                            <EmailIcon />\r\n                                            <Typography variant=\"subtitle2\">{email}</Typography>\r\n                                        </Stack>}\r\n                                        {distance && <Typography variant=\"subtitle2\">{covertToKM} km ({distance} mi)</Typography>}\r\n                                    </Stack>\r\n                                </Stack>\r\n                            </Box>\r\n                        )\r\n                    })}\r\n                </Grid>\r\n            </Box>}\r\n        </DrawerComponent>\r\n    )\r\n}\r\n\r\nfunction MerchantImage(props) {\r\n    const { image } = props;\r\n    if (image && image.url) return <img src={image.url} width={80} height={80} style={{ objectFit: 'contain' }} />\r\n    else return <img src={getLogoImage()} width={80} height={80} style={{ objectFit: 'contain' }} />\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    item_image: {\r\n        width: 80,\r\n        height: 80,\r\n        objectFit: 'contain',\r\n    },\r\n}))"],"names":["LocationMerchantsView","props","useTranslation","t","palette","useTheme","classes","useStyles","showLoading","merchants","onSelectMerchant","onOpenFilter","searchValue","showSuggestBox","_jsxs","DrawerComponent","isOpen","open","onClose","children","_jsx","Box","position","width","border","main","borderRadius","TextField","name","InputProps","startAdornment","pr","SearchIcon","endAdornment","Stack","direction","alignItems","spacing","sx","cursor","height","display","justifyContent","backgroundColor","background","icon","ShopsIcon","color","primary","onClick","id","FilterIcon","value","onChange","e","onHandleChange","target","onKeyPress","key","toLowerCase","triggerChange","CircularProgress","size","mt","Grid","item","xs","map","index","distance","address","toFixed","address_line_1","address_line_2","town_city","phone_number","email","contact_info","forEach","type","covertToKM","imageSources","dataUtil","getImageByUsageTypePortal","creatives","usage_type","offer_detail_merchant","py","alpha","length","ResponsiveImages","ratio","media","item_image","src","getLogoImage","style","objectFit","pl","Typography","variant","PhoneIcon","EmailIcon","makeStyles","theme"],"sourceRoot":""}