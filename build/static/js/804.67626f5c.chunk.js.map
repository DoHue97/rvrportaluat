{"version":3,"file":"static/js/804.67626f5c.chunk.js","mappings":"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","sources":["pages/landing-page/LandingPageView.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { Box, Button, Grid, MenuItem, Popover, Stack, Typography } from '@mui/material'\r\nimport { cache } from '../../utils/cache'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { config_path, portalCfg } from '../../router/config.path'\r\nimport { loadTranslations } from '../../utils/common';\r\nimport PublicPage from '../PublicPage'\r\nimport Modal from '../../components/Modal';\r\nexport default function LandingPageView(props) {\r\n    const appConfig = cache.getAppConfig();\r\n    const { t } = useTranslation();\r\n    const navigate = useNavigate();\r\n\r\n    const {defaultLanguage, languages} = props;\r\n    const [anchorElLanguage, setAnchorElLanguage] = useState(null);\r\n\r\n    const handleOpenLanguages = (event) => {\r\n        setAnchorElLanguage(event.currentTarget);\r\n    };\r\n\r\n    const onChangeLanguage = async (item) => {\r\n        setAnchorElLanguage(null);\r\n        props.onChangeLanguage(item);\r\n        await loadTranslations();\r\n    }\r\n\r\n    console.log(\"props.showRegisterAction:\",props.showRegisterAction);\r\n    return (\r\n        <PublicPage confirm={props.confirm}>\r\n            <Grid item xs={12} marginTop={2}>\r\n                <Typography variant='h5' textAlign={'center'} my={6}>{t('landing_welcome')} {appConfig.name}</Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <Grid item xs={12} marginTop={10}>\r\n                    <Button size='large' id='landingPage/btnLogin' fullWidth variant='contained' onClick={() => navigate(config_path.login)}>{t('btn_login')}</Button>\r\n                </Grid>\r\n                <Grid item xs={12} marginTop={2}>\r\n                    <Button size='large' id='landingPage/btnRegister' fullWidth variant='outlined' onClick={() => props.setShowRegisterAction(true)}>{t('btn_register')}</Button>\r\n                </Grid>\r\n                {/* <Grid item xs={12} container justifyContent={'center'} marginTop={7}>\r\n                    <Typography variant='subtitle1'>{'© CRM.COM'}</Typography>\r\n                </Grid> */}\r\n            </Grid>\r\n            <Grid item xs={12} container sx={{\r\n                position: 'absolute',\r\n                bottom: 8,\r\n                width: 'calc(100% - 48px)',\r\n                justifyContent: 'center',\r\n                alignItems: 'center'\r\n            }} >\r\n                <Button onClick={(e) => handleOpenLanguages(e)} size='large' id='header/changeLanguage'>\r\n                    {defaultLanguage ? defaultLanguage.label : \"\"}\r\n                </Button>\r\n                <Grid xs={12} item container justifyContent={'center'}>\r\n                    <Typography variant='subtitle1'>{'© CRM.COM'}</Typography>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Popover id='list-languages'\r\n                anchorEl={anchorElLanguage}\r\n                open={Boolean(anchorElLanguage)}\r\n                onClose={() => setAnchorElLanguage(null)}\r\n                sx={{\r\n                    top: 45,\r\n                }}\r\n            >\r\n                {languages && languages.length > 0 && languages.map((item, index) => {\r\n                    return (\r\n                        <MenuItem key={index} onClick={() => onChangeLanguage(item)}>\r\n                            <Typography variant='subtitle2'>{item.label}</Typography>\r\n                        </MenuItem>\r\n                    )\r\n                })}\r\n            </Popover>\r\n            {props.showRegisterAction && <Modal\r\n                isOpen={props.showRegisterAction}\r\n                onClose={() => props.setShowRegisterAction(false)}\r\n            >\r\n                <Box>\r\n                    <Stack direction={'row'}>\r\n                        <Typography>{t('exits_rewards_participant')}</Typography>\r\n                    </Stack>\r\n                    <Stack marginTop={4} direction={'row'} justifyContent={'center'} alignItems={'center'}>\r\n                        <Stack flex={1} justifyContent={'center'} alignItems={'center'} spacing={2}>\r\n                            <img src={portalCfg.publicPath + '/assets/images/register_have_card.png'} alt={'Logo Image'} height={100} />\r\n                            <Button id='landingPage/btnRegisterHaveCard' onClick={() => navigate(config_path.register_existing_customer)} variant='contained'>{t('btn_register_have_card')}</Button>\r\n                        </Stack>\r\n                        <Stack flex={1} justifyContent={'center'} alignItems={'center'} spacing={2}>\r\n                            <img src={portalCfg.publicPath + '/assets/images/register_new.png'} alt={'Logo Image'} height={100} />\r\n                            <Button id='landingPage/btnRegisterNew' onClick={() => navigate(config_path.register)}  variant='contained'>{t('btn_register_new')}</Button>\r\n                        </Stack>\r\n                    </Stack>\r\n                </Box>\r\n            </Modal>}\r\n        </PublicPage>\r\n    )\r\n}\r\n"],"names":["LandingPageView","props","appConfig","cache","getAppConfig","t","useTranslation","navigate","useNavigate","defaultLanguage","languages","_useState","useState","_useState2","_slicedToArray","anchorElLanguage","setAnchorElLanguage","onChangeLanguage","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","item","wrap","_context","prev","next","loadTranslations","stop","_x","apply","arguments","console","log","showRegisterAction","_jsxs","PublicPage","confirm","children","_jsx","Grid","xs","marginTop","Typography","variant","textAlign","my","name","Button","size","id","fullWidth","onClick","config_path","login","setShowRegisterAction","container","sx","position","bottom","width","justifyContent","alignItems","e","currentTarget","label","Popover","anchorEl","open","Boolean","onClose","top","length","map","index","MenuItem","Modal","isOpen","Box","Stack","direction","flex","spacing","src","portalCfg","publicPath","alt","height","register_existing_customer","register"],"sourceRoot":""}